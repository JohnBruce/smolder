#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use Pod::Usage;
use File::Spec::Functions qw(catdir catfile splitdir rel2abs canonpath);
use FindBin qw($RealBin);
use Config;

=pod

=head1 NAME

smolder_uninstall - delete a Smolder install

=head1 SYNOPSIS

  smolder_uninstall 

=head1 DESCRIPTION

This script will uninstall a Smolder installation by dropping the Smolder 
database and completely removing the directory that smolder was installed
into (by default: /usr/local/smolder)

This script must be run as root.

Please use this script with utmost caution!

=head1 OPTIONS

=over

=item verbose       

print a running dialogue of what happens, otherwise actions are performed silently.

=item no_prompt

suppress warning prompt

=item admin_db_user

Database user with admin privileges ('root' by default).

=item admin_db_pass

password for the L<admin_db_user>

=back

=cut

BEGIN {

    # Find a SMOLDER_ROOT based on path to bin
    my @dir = splitdir( canonpath($RealBin) );
    $ENV{SMOLDER_ROOT} ||= catdir( @dir[ 0 .. $#dir - 1 ] );

    # use $SMOLDER_ROOT/lib for modules
    my $lib = catdir( $ENV{SMOLDER_ROOT}, "lib" );
    $ENV{PERL5LIB} =
      $ENV{PERL5LIB}
      ? "$ENV{PERL5LIB}:${lib}"
      : "${lib}";
    unshift @INC, $lib, "$lib/" . $Config{archname};

    # load Smolder::Conf
    eval { require Smolder::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Smolder.

Error message:

$@

######################################################################
END
}

use Term::Prompt qw(prompt);
use Smolder::Conf qw(InstallRoot HostName DBUser DBPass DBHost);

my $help          = 0;
my $man           = 0;
my $no_prompt     = 0;
my $admin_db_pass = '';
my $admin_db_user = 'root';
my $verbose;

GetOptions(
    help              => \$help,
    man               => \$man,
    verbose           => \$verbose,
    no_prompt         => \$no_prompt,
    'admin_db_user=s' => \$admin_db_user,
    'admin_db_pass=s' => \$admin_db_pass,
  )
  || pod2usage(2);

pod2usage(1) if $help;
pod2usage( -verbose => 2 ) if $man;

unless ($no_prompt) {
    exit 1
      unless prompt(
        "y",
"This program will totally and permanently remove this Smolder installation.\n\nAre you sure you
want to proceed?", "y/n", "y"
      );
}

# Must be running as root.
exit_error("Must be run as root.") unless ( $> eq "0" );
my $root = InstallRoot();

# stop Smolder services
system("$root/bin/smolder_ctl stop");

# drop all databases
my $cmd = "$root/bin/smolder_dropdb";
$cmd .= "--admin_db_user=$admin_db_user " if $admin_db_user;
$cmd .= "--admin_db_pass=$admin_db_pass " if $admin_db_pass;

system($cmd) == 0
  or die "Unable to remove existing database: $?";

# now blow all files away!
print "\nNow removing all files...\n\n" if $verbose;
system("rm -Rf $root");

# it worked.
exit(0);

sub exit_error {
    my $cmd = $0;
    $cmd =~ s/.*\/(.+)$/$1/;

    my $message = shift;
    print STDERR "\nError: $cmd:  $message\n\n";
    exit(1);
}
