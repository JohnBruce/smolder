#!/usr/bin/env perl
use strict;
use warnings;

=pod

=head1 NAME

smolder_sql_diagram 

Create a Smolder.png ERD of specified Smolder database tables.

=head1 SYNOPSIS

  bin/smolder_sql_diagram --tables foo,bar --filename schema.png

=head1 DESCRIPTION

This script will create an ERD of the Smolder db, with specifed tables.
It does this by using mysqldump, and the SQL::Translator sqlt-diagram to
produce a PNG file.  See sqlt-diagram and mysqldump for
more details about these utilities.

=head1 OPTIONS

=over

=item help

Show usage

=item man 

Show full man page

=item DBHost

The host name of the database. The default values is pulled from the smolder.conf.

=item DBUser

The administrator database user. The default value is pulled from the smolder.conf.

=item DBPass

The administrator database password. The default value is pulled from the smolder.conf.

=item DBName

The database name. The default value is pulled from the smolder.conf.

=item tables

List of tables separated by commas; order counts here.

=item filena

Path and filename for the resulting png. By default it is 'Smolder.png'

=item title 

The title of the image. By default it is 'Smolder schema'

=back

=cut

use File::Spec::Functions qw(catdir catfile splitdir rel2abs);
use FindBin qw($RealBin);
use Config;

BEGIN {
    my @dir = splitdir($RealBin);
    pop(@dir) while ( !$dir[$#dir] );
    $ENV{SMOLDER_ROOT} ||= catdir( @dir[ 0 .. $#dir - 1 ] );

    my $lib = catdir( $ENV{SMOLDER_ROOT}, "lib" );
    $ENV{PERL5LIB} =
      $ENV{PERL5LIB}
      ? "$ENV{PERL5LIB}:${lib}"
      : "${lib}";
    unshift @INC, $lib, "$lib/" . $Config{archname};

    eval { require Smolder::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Smolder.

Error message:

$@

######################################################################
END
}

use Smolder::Conf;
use Getopt::Long;
use File::Spec::Functions qw(catfile);
use Pod::Usage;
use File::Temp;
use File::Copy;

my $config = Smolder::Conf->get_config();

# default options
my $help        = 0;
my $man         = 0;
my $filename    = 'Smolder.png';
my $DBUser      = $config->get('DBUser');
my $DBPass     = $config->get('DBPass');
my $DBHost      = $config->get('DBHost');
my $DBName      = $config->get('DBName');
my @tables      = ();
my $title       = 'Smolder Schema';

GetOptions(
    'help'      => \$help,
    'man'       => \$man,
    'filename=s'=> \$filename,
    'DBPass=s'  => \$DBPass,
    'DBUser=s'  => \$DBUser,
    'DBName=s'  => \$DBName,
    'DBHost=s'  => \$DBHost,
    'tables=s'  => \@tables,
    'title=s'   => \$title,
  )
  or pod2usage(1);

pod2usage(1) if $help;
pod2usage( -verbose => 2 ) if $man;

if (@tables) {
    @tables = split( /,/, join( ',', @tables ) );
}

my $tmp = File::Temp->new(
    SUFFIX => '.sql',
    UNLINK => 1,
);

# create the mysqldump command
my $dump =
  "mysqldump -u$DBUser -p$DBPass -h$DBHost --no-data $DBName ";
if (@tables) {
    $dump .= join( " ", @tables );
}

# get the output
my $output = `$dump` or die "Could not execute `$dump` with error: $!";

# get rid of certain CONSTRAINT stuff MySQL does that SQL::Translator doesn't like
if ($output) {
    $output =~ s/(\s)*CONSTRAINT\s*`\w*`/$1/g;
}

# now put the output into the temp file.
print $tmp $output
  or die "Could not print to $tmp! $!";

my $sqltdia = "sqlt-diagram -o $filename -i png --db=MySQL "
    . "--gutter=70 -f medium $tmp -t '$title' --color ";

system($sqltdia) == 0 or die "Could not execute sqlt-diagram with error: $?";

